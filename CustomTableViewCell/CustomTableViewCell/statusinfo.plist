<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>Id</key>
		<integer>1</integer>
		<key>createAt</key>
		<string>8:23</string>
		<key>mbtype</key>
		<string>mbtype.png</string>
		<key>profileImageUrl</key>
		<string>1.jpg</string>
		<key>source</key>
		<string>iphone 5s</string>
		<key>text</key>
		<string>高质量的代码库能使产品迭代、协作和维护变得更为容易，加快长期项目开发的速度。在Quora，我们十分重视代码库的质量。</string>
		<key>userName</key>
		<string>小冰</string>
	</dict>
	<dict>
		<key>Id</key>
		<integer>2</integer>
		<key>createAt</key>
		<string>昨天 22:23</string>
		<key>mbtype</key>
		<string>mbtype.png</string>
		<key>profileImageUrl</key>
		<string>2.jpg</string>
		<key>source</key>
		<string>iphone 6</string>
		<key>text</key>
		<string>Mirantis昨天宣布将与CoreOS进行合作，今后Mirantis推出的OpenStack都会集成CoreOS专为Linux容器所推出的Tectonic</string>
		<key>userName</key>
		<string>翠翠</string>
	</dict>
	<dict>
		<key>Id</key>
		<integer>3</integer>
		<key>createAt</key>
		<string>昨天 21:05</string>
		<key>mbtype</key>
		<string>mbtype.png</string>
		<key>profileImageUrl</key>
		<string>3.jpg</string>
		<key>source</key>
		<string>iphone 5s</string>
		<key>text</key>
		<string>CSDN移动将持续为您优选移动开发的精华内容，共同探讨移动开发的技术热点话题，涵盖移动应用、开发工具、移动游戏及引擎、智能硬件、物联网等方方面面。如果您想投稿、参与内容翻译工作，或寻求近匠报道</string>
		<key>userName</key>
		<string>影子</string>
	</dict>
	<dict>
		<key>Id</key>
		<integer>4</integer>
		<key>createAt</key>
		<string>昨天 19:58</string>
		<key>mbtype</key>
		<string>mbtype.png</string>
		<key>profileImageUrl</key>
		<string>4.jpg</string>
		<key>source</key>
		<string>iphone 5s</string>
		<key>text</key>
		<string>Code coverage是一个计算你的单元测试覆盖率的工具。高水平的覆盖给你的单元测试带来信心，也表明你的应用被彻底的测试过了。你可能写了几千个单元测试，但如果覆盖率不高，那么你写的这套测试可能价值也不大。</string>
		<key>userName</key>
		<string>风影</string>
	</dict>
	<dict>
		<key>Id</key>
		<integer>5</integer>
		<key>createAt</key>
		<string>昨天 17:34</string>
		<key>mbtype</key>
		<string>mbtype.png</string>
		<key>profileImageUrl</key>
		<string>5.jpg</string>
		<key>source</key>
		<string>iphone 5</string>
		<key>text</key>
		<string>在过去，如果你想要制作一个测试的代码覆盖报告出来，需要设置很多[选项]。非常复杂，还有许多需要手动设置。在iOS 9中，苹果提供了智能的代码覆盖工具，它是和LLVM一体的，每次运行测试都会被调用和计算。</string>
		<key>userName</key>
		<string>骑在牛上的人</string>
	</dict>
	<dict>
		<key>Id</key>
		<integer>6</integer>
		<key>createAt</key>
		<string>昨天 15:44</string>
		<key>mbtype</key>
		<string>mbtype.png</string>
		<key>profileImageUrl</key>
		<string>6.jpg</string>
		<key>source</key>
		<string>iphone 5</string>
		<key>text</key>
		<string>第一件事是创建一个新项目，并确认你选上了Unit tests选项。这会按要求创建一个默认项目，现我们需要测试点什么。这个测试可能是你的任意需求，这里我添加一个空的swift文件，里面写好了一个全局的方法。这个方法检测两个字母串是否是仅排序不同的相同字母组成的词。写成全局的方法，可能不是好的设计，但这里我们仅演示一下。</string>
		<key>userName</key>
		<string>断线的风筝</string>
	</dict>
	<dict>
		<key>Id</key>
		<integer>7</integer>
		<key>createAt</key>
		<string>昨天 13:44</string>
		<key>mbtype</key>
		<string>mbtype.png</string>
		<key>profileImageUrl</key>
		<string>7.jpg</string>
		<key>source</key>
		<string>iphone 5s</string>
		<key>text</key>
		<string>一旦这个测试通过了，你就能知道checkWord这个方法，至少有一条路径是对的。但你不知道的是，还多多少没有被测试到。这就是code coverage这个工具的好处。当你打开code coverage tab后，你可以清楚的看到测试的覆盖情况。他们按找target、file、function进行了自动分组。</string>
		<key>userName</key>
		<string>安静的小P</string>
	</dict>
	<dict>
		<key>Id</key>
		<integer>8</integer>
		<key>createAt</key>
		<string>昨天 11:25</string>
		<key>mbtype</key>
		<string>mbtype.png</string>
		<key>profileImageUrl</key>
		<string>8.jpg</string>
		<key>source</key>
		<string>iphone 5s</string>
		<key>text</key>
		<string>这会展示一个你的类、方法的列表，并标示出每个的测试覆盖率。如果你将鼠标悬停在checkWord这个方法上，你可以看到测试的覆盖率是28%。不能接受啊！我们需要找到，那些代码分支是能够被测试执行，那些是不能的，进而改善他们。双击方法的名字，Xcode会打开类的代码，并且看到code coverage的情况。</string>
		<key>userName</key>
		<string>安娜</string>
	</dict>
	<dict>
		<key>Id</key>
		<integer>9</integer>
		<key>createAt</key>
		<string>昨天 10:15</string>
		<key>mbtype</key>
		<string>mbtype.png</string>
		<key>profileImageUrl</key>
		<string>9.jpg</string>
		<key>source</key>
		<string>iphone 6 plus</string>
		<key>text</key>
		<string>很显然，28%的覆盖率不是我们的目标。这里没有UI，看起来是个完美的编写测试用例的候选function。所以，我们添加一个测试用例。理想情况下，我们希望每个分支都能被测试到。这样就能达到完整的覆盖。添加下面的测试用例到你的测试类中。</string>
		<key>userName</key>
		<string>对话北京</string>
	</dict>
	<dict>
		<key>Id</key>
		<integer>10</integer>
		<key>createAt</key>
		<string>昨天 09:15</string>
		<key>mbtype</key>
		<string>mbtype.png</string>
		<key>profileImageUrl</key>
		<string>8.jpg</string>
		<key>source</key>
		<string>iphone 5s</string>
		<key>text</key>
		<string>使用code coverage是一个非常棒的方式，帮你建立真正有价值的测试组合。远好于你写了很多测试用例，但没有真正测试到代码。Xcode 7 让这种方式变的非常简单，我推荐你在项目中开启 Code Coverage。即使你已经写好了测试，也可以帮你知道到底测试写的怎么样。</string>
		<key>userName</key>
		<string>安娜</string>
	</dict>
	<dict>
		<key>Id</key>
		<integer>11</integer>
		<key>createAt</key>
		<string>昨天 09:15</string>
		<key>mbtype</key>
		<string>mbtype.png</string>
		<key>profileImageUrl</key>
		<string>10.jpg</string>
		<key>source</key>
		<string>iphone 5s</string>
		<key>text</key>
		<string> 2015中国移动开发者大会（MDCC 2015）将于10月15-16日在北京新云南皇冠假日酒店召开。大会特设五大技术专场：平台与技术iOS、平台与技术Android、产品与设计、游戏开发、企业移动化。此外，大会更是首次举办国内极具权威影响力的IoT技术峰会，特设硬件开发技术与虚拟现实两大专场。大会将聚集国内最具实力的产品技术团队，与开发者一道进行最前沿的探讨与交流。</string>
		<key>userName</key>
		<string>小芳</string>
	</dict>
	<dict>
		<key>Id</key>
		<integer>12</integer>
		<key>createAt</key>
		<string>昨天 09:15</string>
		<key>mbtype</key>
		<string>mbtype.png</string>
		<key>profileImageUrl</key>
		<string>11.jpg</string>
		<key>source</key>
		<string>iphone 6 plus</string>
		<key>text</key>
		<string> Charlie Miller和Chris Valasek能从远端黑入吉普车。这两位研究员为科技媒体《Wired》记者Andy Greenberg做了一次亲身示范，让记者体验驾车时遭遇车辆被黑的实际经历。远程操控的范围包括：方向盘、刹车、发动机、车门锁，以及重置时速表、转速表和控制变速器等等。</string>
		<key>userName</key>
		<string>飞一般的小老虎</string>
	</dict>
</array>
</plist>
